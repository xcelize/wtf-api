# Generated by Django 3.1.4 on 2021-01-01 01:52

import authenticate.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('TheApi', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nom', models.CharField(max_length=30, null=True)),
                ('prenom', models.CharField(max_length=30, null=True)),
                ('date_inscription', models.DateTimeField(auto_now=True)),
                ('date_naissance', models.DateTimeField(null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('genre', models.CharField(max_length=10, null=True)),
                ('telephone', models.CharField(max_length=10, null=True)),
                ('pays', models.CharField(max_length=30, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': ('user',),
                'verbose_name_plural': ('users',),
                'db_table': 'user',
            },
            managers=[
                ('objects', authenticate.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SerieFavoris',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('serie', models.ForeignKey(db_column='id_serie', on_delete=django.db.models.deletion.DO_NOTHING, to='TheApi.series')),
                ('user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'serie')},
            },
        ),
        migrations.CreateModel(
            name='FilmFavoris',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('film', models.ForeignKey(db_column='id_film', on_delete=django.db.models.deletion.DO_NOTHING, to='TheApi.films')),
                ('user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Films Favoris',
                'unique_together': {('user', 'film')},
            },
        ),
    ]
